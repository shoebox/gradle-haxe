buildscript
{
	repositories
	{
		flatDir
		{
			dirs 'plugin-haxe/'
		}
	}
	dependencies
	{
		classpath group: 'org.shoebox', name: 'plugin-haxe', version: '0.1.0'
	}
}


import org.shoebox.haxe.HaxePlugin;
import org.shoebox.haxe.HaxeFlavor;
import org.shoebox.haxe.HaxeOutput;
import org.shoebox.haxe.HaxeSourceSet;

apply plugin: 'org.shoebox.haxe'

buildDir = 'bin/'


project.ext
{
	overrideOutput = null;
}

model
{
	haxe
	{
		defaultConfig
		{
			main = "Main"
			platform "js"

			sources
			{
				haxe(HaxeSourceSet)
				{
					source.srcDir "src"
				}
			}
		}

		flavors
		{
			test1(HaxeFlavor)
			{
				main = "Main"
				
				outputs
				{
					mobile(HaxeOutput)
					{
						fileName "index.mobile.js"
						flag = ["mobile"]
					}	

					tablet(HaxeOutput)
					{
						fileName "index.tablet.js"	
						flag = ["tablet"]
					}
				}
			}

			test2(HaxeFlavor)
			{
				outputFileName "index.mobile.js"
			}
		}
	}
}

/*
model
{
	haxe
	{
		version = "3.1.3"

		dimensions = ["platform", "device", "environement", "mode"]
		res = file("res");

		defaultConfig
		{
			main = "Main"
		}
		
		flavors
		{
			all
			{
			
			}

			js(HaxeFlavor)
			{
				dimension "platform"
				platform "js"
				sources
				{
					haxe(HaxeSourceSet)
					{
						source.srcDir "src"
					}
				}

				compilerFlag = []
				flag = ["flag-js"]
				haxelib = [];
				resource = [];
			}

			test(HaxeFlavor)
			{
				dimension "environement"
				flag = ["test"]
			}

			staging(HaxeFlavor)
			{
				dimension "environement"
				flag = ["staging"]
			}

			live(HaxeFlavor)
			{
				dimension "environement"
			}

			debug(HaxeFlavor)
			{
				dimension "mode"
				debug true;
				flag = ["flag-debug"]
			}

			mobile(HaxeFlavor)
			{
				dimension "device"
				outputFileName "index.mobile.js"
				flag = ["mobile"]
			}

			tablet(HaxeFlavor)
			{
				dimension "device"
				outputFileName "index.tablet.js"
				flag = ["tablet"]
			}

			release(HaxeFlavor)
			{
				dimension "mode"
				debug false;
				flag = ["flag-release"]
			}
		}
		
	}
}
*/
